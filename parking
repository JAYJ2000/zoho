
class Parking{
  var totalCarSlot: Int = 0
  var totalBikeSlot: Int = 0
  var bikeSlot:[Int:String] = [:]
  var carSlot:[Int:String] = [:]
                            //Menu
  func menu(){
    var userChoice:Int = -1
    repeat{
    print("""
                   MENU
                   ~~~~ 
          1.Park bike
          2.Parked bike details
          3.Available slot for bike
          4.Search bike by slot
          5.Search bike by number plate
          6.Departing bike

          6.Park car
          7.Available slot for car
          8.Search car by slot
          9.Search car by number plate
          10.Departing car
          0.Exit

         """)
    if let userChoiceInput = readLine(){
      if let userChoiceInt = Int(userChoiceInput){
        userChoice = userChoiceInt
        switch(userChoice){
          case 0:
          return
          case 1:
          self.parkBike()
          case 2:
          self.parkedBike()
          case 3:
          self.availableSlotForBike()
          case 4:
          self.searchBikeBySlot()
          default :
          print("Invalid input")
        }       
      }else{print("Invalid input")}    
    }}while(userChoice != 0)
  }

                            //Total Slot
  func totalSlot(){  

     print("Enter the total bike slot")
     if let totalBikeSlotInput = readLine(){
      if let totalBikeSlotInt = Int(totalBikeSlotInput){
        totalBikeSlot = totalBikeSlotInt
        
    print("Enter the total car slot")
    if let totalCarSlotInput = readLine(){
      if let totalCarSlotInt = Int(totalCarSlotInput){
        totalCarSlot = totalCarSlotInt
     
        for bikeSlotNumber in 1 ... totalBikeSlot {
          bikeSlot[bikeSlotNumber] = ""
        }
        
        for carSlotNumber in 1 ... totalCarSlot{
          carSlot[carSlotNumber] = ""
        }

        print("Bike and car slot allocated successfully")
        self.menu()
        
         }else{print("Invalid input")} }
      }else{print("Invalid input")} }
  }

                            //1.Park bike

  func parkBike() {
    var parkSlot:Int
    print("Enter the bike number")
    let bikeNUmber = readLine()
    availableSlotForBike()
    print("\nEnter the slot number")
    if let slotInput = readLine(){
      if let slotInputInt = Int(slotInput){
        parkSlot = slotInputInt
        if bikeSlot[parkSlot] == ""{
          bikeSlot[parkSlot] = bikeNUmber
          print("Slot allocated successfully")
        }
        else{
          print("Invalid slot number")
        }
      }else{ print("Invalid input")}
    }
     }
  
                    //2.Parked bike details
  func parkedBike(){
    bikeSlot.sorted(by: <).forEach{key,value in
                    print("\(key) - \((value == "") ? "Available" : value )")
                    }
  }
                    //3.Available slots for bike
  func availableSlotForBike(){
    print("Available slots")
    bikeSlot.sorted(by: <).forEach{key,value in 
                     if value == ""{
                       print(key, terminator: " ")
                     }
                    }
  }

                    //4.Search bike by slot
  func searchBikeBySlot(){
    var slot:Int
    print("Enter the slot number")
    if let slotInput = readLine(){
      if let slotInputInt = Int(slotInput){
        slot = slotInputInt
    if bikeSlot[slot] == "" || slot > totalBikeSlot || slot <= 0{print("No bike found")}
    else{print("\(slot) - \(bikeSlot[slot] ?? "")")}}}
  }
                       //5.Search bike by number

}
let parking = Parking()
parking.totalSlot()
